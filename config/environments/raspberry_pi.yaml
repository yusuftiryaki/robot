# OBA Robot - Raspberry Pi Donanım Ortamı Ayarları
# Bu dosya, robot_config.yaml'daki varsayılan ayarları geçersiz kılar.
# Sadece gerçek donanımda farklı olan ayarları buraya ekleyin.

# =====================================
# ⚙️ TEMEL AYARLAR
# =====================================
# Gerçek donanımda olduğumuz için simülasyonu kapatıyoruz.
simulation:
  enabled: false

# =====================================
# 🚗 MOTOR KONTROLÜ
# =====================================
motors:
  # Gerçek motor sürücüsü ve pin yapılandırması
  type: "hardware" # motor tipini 'hardware' olarak değiştiriyoruz.
  driver: "l298n"

  # L298N #1 - Tekerlek Motorları (Hareket)
  wheels:
    left:
      # L298N #1 Motor A
      pin_a: 7 # IN1
      pin_b: 8 # IN2
      pwm_pin: 18 # ENA (PWM)
      enable_pin: 9 # Enable (opsiyonel)
      encoder_pin_a: 2 # Encoder A
      encoder_pin_b: 3 # Encoder B
    right:
      # L298N #1 Motor B
      pin_a: 10 # IN3
      pin_b: 11 # IN4
      pwm_pin: 19 # ENB (PWM)
      enable_pin: 13 # Enable (opsiyonel)
      encoder_pin_a: 4 # Encoder A
      encoder_pin_b: 5 # Encoder B
  # L298N #2 - Yan Fırça Motorları
  brushes:
    side_right:
      # L298N #2 Motor A
      pin_a: 22 # IN1
      pin_b: 23 # IN2
      pwm_pin: 24 # ENA (PWM)
      enable_pin: 25 # Enable
    side_left:
      # L298N #2 Motor B
      pin_a: 20 # IN3
      pin_b: 21 # IN4
      pwm_pin: 26 # ENB (PWM)
      enable_pin: 16 # Enable

  # L298N #3 - Ana Fırça ve Fan
  main_systems:
    brush:
      # L298N #3 Motor A (Ana fırça) - GPS çakışması giderildi
      pin_a: 5 # IN1 (GPIO 14 yerine)
      pin_b: 6 # IN2 (GPIO 15 yerine)
      pwm_pin: 12 # ENA (PWM)
      enable_pin: 17 # Enable
    fan:
      # L298N #3 Motor B (Fan) - Güvenli pinler
      pin_a: 27 # IN3
      pin_b: 28 # IN4 (varsa, yoksa atla)
      pwm_pin: 13 # ENB (PWM) - GPIO 13 kullanılabilir
      enable_pin: 1 # Enable (GPIO 1 dikkatli kullan)

# =====================================
# 📡 SENSÖRLER
# =====================================
sensors:
  # Gerçek sensörler kullanılacak, sahte veriyi kapat.
  mock_enabled: false

  # I2C sensörleri
  i2c:
    bus: 1 # Raspberry Pi'daki varsayılan I2C bus'ı
    devices:
      - type: "mpu6050"
        address: 0x68
        name: "main_imu"
      - type: "ina219"
        address: 0x40
        name: "battery_monitor"
        shunt_ohms: 0.1
        max_expected_amps: 10.0
        description: "Ana batarya seviye takibi"
      - type: "ina219"
        address: 0x41
        name: "charging_monitor"
        shunt_ohms: 0.1
        max_expected_amps: 3.0
        description: "Şarj istasyonu bağlantı kontrolü"

  # GPIO tabanlı sensörler (butonlar, tamponlar vb.)
  gpio:
    - type: "button"
      pin: 15 # Emergency stop (GPIO 17 yerine - çakışma var)
      name: "emergency_stop"
      pull_up: true
    - type: "button"
      pin: 14 # Front bumper (GPIO 26 yerine - çakışma var)
      name: "front_bumper"
      pull_up: true

  # UART tabanlı sensörler (GPS vb.)
  uart:
    - type: "gps"
      device: "/dev/serial0" # Pi'deki varsayılan UART portu
      baud_rate: 9600
      name: "gps_module"

# =====================================
# 📷 KAMERA
# =====================================
camera:
  # Gerçek kamera kullanılacak.
  type: "hardware"
  device: "/dev/video0" # Linux'taki varsayılan kamera aygıtı

# =====================================
# 📊 LOGLAMA
# =====================================
logging:
  # Donanım üzerinde daha detaylı loglama için seviyeyi DEBUG yapabiliriz.
  level: "DEBUG"
  console:
    # Raspberry Pi terminalinde renkli çıktı sorun yaratabilir.
    colored: false
  file:
    # Log dosyalarının Pi üzerindeki mutlak yolu
    path: "/home/pi/oba/logs"

# =====================================
# 📁 VERİ YOLLARI
# =====================================
paths:
  # Pi üzerindeki mutlak dosya yolları
  data: "/home/pi/oba/data"
  logs: "/home/pi/oba/logs"
  models: "/home/pi/oba/models"
  config: "/home/pi/oba/config"
  temp: "/tmp/oba"

# =====================================
# ⚡ PERFORMANS
# =====================================
performance:
  # Raspberry Pi gibi daha kısıtlı bir sistem için döngü sıklığını ayarlayalım.
  loop_frequency: 20 # Hz

# =====================================
# 🛡️ GÜVENLİK
# =====================================
safety:
  # Gerçek dünyada çarpışma mesafesini daha dikkatli ayarlayalım.
  collision_detection:
    distance_threshold: 0.10 # 10 cm
